# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Download Eclipse Temurin
      wget https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.1%2B12/OpenJDK17U-jdk_x64_linux_hotspot_17.0.1_12.tar.gz --output-document $(Agent.TempDirectory)/OpenJDK17U-jdk_x64_linux_hotspot_17.0.1_12.tar.gz

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: '$(Agent.TempDirectory)/OpenJDK17U-jdk_x64_linux_hotspot_17.0.1_12.tar.gz'
    jdkDestinationDirectory: '$(Agent.ToolsDirectory)/binaries/openjdk'
    cleanDestinationDirectory: true
    createExtractDirectory: true

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'Path'
    jdkDirectory: '$(Agent.ToolsDirectory)/binaries/openjdk'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    goals: 'package'
